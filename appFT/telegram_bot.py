import telebot
import psycopg2
from datetime import datetime, timedelta

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –∞–¥–º–∏–Ω–∞
bot_token = '5724647176:AAEuC1p7C-emm_-TkfKvdtPuR5y3yTH5kbE'
admin_chat_id = '526973879'

bot = telebot.TeleBot(bot_token)

def connect_db():
    try:
        return psycopg2.connect(
            dbname="ll",
            user="postgres",
            password="123",
            host="localhost",
            port="5433"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None

def create_table():
    conn = connect_db()
    if conn:
        try:
            with conn.cursor() as cursor:
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS message_user (
                        user_id BIGINT PRIMARY KEY,
                        message TEXT,
                        admin_reply TEXT DEFAULT NULL,
                        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    );
                """)
                conn.commit()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
        finally:
            conn.close()

def delete_old_messages():
    conn = connect_db()
    if conn:
        try:
            with conn.cursor() as cursor:
                cutoff_date = datetime.now() - timedelta(days=10)
                cursor.execute("DELETE FROM message_user WHERE timestamp < %s;", (cutoff_date,))
                conn.commit()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        finally:
            conn.close()

def save_message_to_db(user_id, message, admin_reply=None):
    conn = connect_db()
    if conn:
        try:
            with conn.cursor() as cursor:
                cursor.execute("""
                    INSERT INTO message_user (user_id, message, admin_reply)
                    VALUES (%s, %s, %s)
                    ON CONFLICT (user_id) DO UPDATE 
                    SET message = EXCLUDED.message, admin_reply = EXCLUDED.admin_reply, timestamp = CURRENT_TIMESTAMP;
                """, (user_id, message, admin_reply))
                conn.commit()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        finally:
            conn.close()

def get_message_from_db(user_id):
    conn = connect_db()
    if conn:
        try:
            with conn.cursor() as cursor:
                cursor.execute("SELECT message, admin_reply FROM message_user WHERE user_id = %s;", (user_id,))
                return cursor.fetchone()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        finally:
            conn.close()
    return None

def get_all_users():
    conn = connect_db()
    if conn:
        try:
            with conn.cursor() as cursor:
                cursor.execute("SELECT user_id FROM message_user;")
                return [user[0] for user in cursor.fetchall()]
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        finally:
            conn.close()
    return []

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! üëã –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É, –∏ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—ë –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —á–∞—Å–æ–≤. üïí")

@bot.message_handler(func=lambda message: not message.text.startswith('\\–æ—Ç–≤–µ—Ç') and not message.text.startswith('/news'))
def handle_user_message(message):
    user_id = message.from_user.id
    user_message = message.text
    save_message_to_db(user_id, user_message)
    bot.reply_to(message, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üôå –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —á–∞—Å–æ–≤. ‚è≥")
    bot.send_message(admin_chat_id, f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {user_message}")

@bot.message_handler(func=lambda message: message.text.startswith('\\–æ—Ç–≤–µ—Ç'))
def handle_admin_reply(message):
    try:
        parts = message.text.split()
        user_id = int(parts[1])
        admin_reply = ' '.join(parts[2:])
        result = get_message_from_db(user_id)
        if result:
            user_message, current_admin_reply = result
            if not current_admin_reply:
                save_message_to_db(user_id, user_message, admin_reply)
                bot.send_message(user_id, f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {admin_reply} üì©")
                bot.send_message(admin_chat_id, f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. ‚úÖ")
            else:
                bot.send_message(admin_chat_id, f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. ‚ùå")
        else:
            bot.send_message(admin_chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω. ‚ùå")
    except Exception as e:
        bot.send_message(admin_chat_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞: {e} ‚ùå")

@bot.message_handler(commands=['news'])
def send_news(message):
    if str(message.from_user.id) == admin_chat_id:
        news_text = ' '.join(message.text.split()[1:])
        if news_text:
            for user_id in get_all_users():
                try:
                    bot.send_message(user_id, f"üì¢ –ù–æ–≤–æ—Å—Ç—å: {news_text}")
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {user_id}: {e}")
            bot.send_message(admin_chat_id, "–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. ‚úÖ")
        else:
            bot.send_message(admin_chat_id, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏. ‚ùå")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. üö´")

create_table()
delete_old_messages()
bot.polling(none_stop=True)
